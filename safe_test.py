#!/usr/bin/env python3
"""
MINIMAL SAFE TEST - Generated by safe_diagnostic.py
This tests ONLY the most basic imports without running the full application
"""

import sys
import os

def test_basic_imports():
    """Test basic imports without side effects"""
    print("Testing basic Python imports...")
    
    try:
        from PyQt6.QtWidgets import QApplication
        print("‚úÖ PyQt6.QtWidgets available")
    except ImportError as e:
        print(f"‚ùå PyQt6.QtWidgets failed: {e}")
        return False
    
    # Add current directory to path
    current_dir = os.path.dirname(os.path.abspath(__file__))
    if current_dir not in sys.path:
        sys.path.insert(0, current_dir)
    
    # Test if main modules exist and can be imported
    modules_to_test = ['main_app', 'project_manager']
    
    for module_name in modules_to_test:
        try:
            # Use importlib to test import without executing
            import importlib.util
            spec = importlib.util.find_spec(module_name)
            if spec:
                print(f"‚úÖ {module_name} can be imported")
            else:
                print(f"‚ùå {module_name} not found")
        except Exception as e:
            print(f"‚ö†Ô∏è {module_name} test failed: {e}")
    
    return True

if __name__ == "__main__":
    print("üõ°Ô∏è SAFE MINIMAL TEST")
    print("This test only checks imports - it won't run your application")
    print("-" * 50)
    
    if test_basic_imports():
        print("\n‚úÖ Basic tests passed!")
        print("Your project structure looks good for running the full application.")
    else:
        print("\n‚ùå Some basic tests failed.")
        print("Check the errors above before running the full application.")
